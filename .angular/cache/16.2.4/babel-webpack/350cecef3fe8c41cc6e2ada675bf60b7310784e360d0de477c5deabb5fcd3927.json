{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BlogDataService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://jsonplaceholder.typicode.com/posts';\n  }\n  getAllBlogs() {\n    return this.http.get(this.apiUrl);\n  }\n  getBlogById(id) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.get(url);\n  }\n  static #_ = this.ɵfac = function BlogDataService_Factory(t) {\n    return new (t || BlogDataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BlogDataService,\n    factory: BlogDataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BlogDataService","constructor","http","apiUrl","getAllBlogs","get","getBlogById","id","url","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\VamanPro\\Codes\\merc\\delete-app\\src\\app\\services\\blog.service.ts"],"sourcesContent":["// blog-data.service.ts\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Blog } from '../models/blog.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BlogDataService {\n  private apiUrl = 'https://jsonplaceholder.typicode.com/posts';\n\n  constructor(private http: HttpClient) { }\n\n  getAllBlogs(): Observable<any[]> {\n    return this.http.get<any[]>(this.apiUrl);\n  }\n\n  getBlogById(id: number): Observable<any> {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.get<any>(url);\n  }\n}\n"],"mappings":";;AASA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,4CAA4C;EAErB;EAExCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,IAAI,CAACF,MAAM,CAAC;EAC1C;EAEAG,WAAWA,CAACC,EAAU;IACpB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,IAAII,EAAE,EAAE;IAClC,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAMG,GAAG,CAAC;EAChC;EAAC,QAAAC,CAAA,G;qBAZUT,eAAe,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfd,eAAe;IAAAe,OAAA,EAAff,eAAe,CAAAgB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}