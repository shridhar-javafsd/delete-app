{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class BlogDataService {\n  constructor() {\n    this.blogs = [{\n      id: 1,\n      title: 'Blog 1',\n      body: 'Content for Blog 1',\n      userId: 1\n    }, {\n      id: 2,\n      title: 'Blog 2',\n      body: 'Content for Blog 2',\n      userId: 2\n    }\n    // Add more blog entries as needed\n    ];\n  }\n\n  getAllBlogs() {\n    return this.blogs;\n  }\n  getBlogById(id) {\n    return this.blogs.find(blog => blog.id === id);\n  }\n  static #_ = this.ɵfac = function BlogDataService_Factory(t) {\n    return new (t || BlogDataService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BlogDataService,\n    factory: BlogDataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BlogDataService","constructor","blogs","id","title","body","userId","getAllBlogs","getBlogById","find","blog","_","_2","factory","ɵfac","providedIn"],"sources":["D:\\VamanPro\\Codes\\merc\\delete-app\\src\\app\\services\\blog.service.ts"],"sourcesContent":["// blog-data.service.ts\nimport { Injectable } from '@angular/core';\nimport { Blog } from '../models/blog.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BlogDataService {\n  private blogs: Blog[] = [\n    { id: 1, title: 'Blog 1', body: 'Content for Blog 1', userId: 1 },\n    { id: 2, title: 'Blog 2', body: 'Content for Blog 2', userId: 2 },\n    // Add more blog entries as needed\n  ];\n\n  getAllBlogs(): Blog[] {\n    return this.blogs;\n  }\n\n  getBlogById(id: number): Blog | undefined {\n    return this.blogs.find((blog) => blog.id === id);\n  }\n}\n"],"mappings":";AAOA,OAAM,MAAOA,eAAe;EAH5BC,YAAA;IAIU,KAAAC,KAAK,GAAW,CACtB;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE,oBAAoB;MAAEC,MAAM,EAAE;IAAC,CAAE,EACjE;MAAEH,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE,oBAAoB;MAAEC,MAAM,EAAE;IAAC;IAC/D;IAAA,CACD;;;EAEDC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACL,KAAK;EACnB;EAEAM,WAAWA,CAACL,EAAU;IACpB,OAAO,IAAI,CAACD,KAAK,CAACO,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACP,EAAE,KAAKA,EAAE,CAAC;EAClD;EAAC,QAAAQ,CAAA,G;qBAbUX,eAAe;EAAA;EAAA,QAAAY,EAAA,G;WAAfZ,eAAe;IAAAa,OAAA,EAAfb,eAAe,CAAAc,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}